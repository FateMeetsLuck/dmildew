/*
When a free function is called, the associated this is the surrounding local variable "this." Otherwise the "this"
is the left hand side of an object access expression that is the function call. Explicit "this" objects can be
given to any function using apply or call.
*/
function foo() {
	console.log(`foo: this=${this}`);
}

class Bar {
	constructor() {
		foo();
	}
}

new Bar;

let a = "global";
{
	function showA() {
		console.log(a);
	}

	showA();
	let a = "block";
	showA();
} // wrong output still

// As of Feb 18 16:02 2021 This program does not produce the correct output, however, the program doesn't run at all in Node.js
// due to complaints of an uninitialized variable. Extra work will be required to implement a variable scope resolver in both
// The VM and compiler. 