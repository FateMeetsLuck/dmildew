// This file is a scratchpad for implementing and testing VM features.

/**
 * This has been moved to its own file in profile.mds
 */
function profile()
{
    let start = System.currentTimeMillis();
    for(let i = 0; i < 1000000; ++i) {}
    let total = System.currentTimeMillis() - start;
    console.log(`Took ${total} ms`); 
}

// profile();

function testInheritance() {
    class Foo {
        constructor() {
            console.log("Calling Foo::constructor");
        }
    };

    class Bar extends Foo {
        constructor() {
            super();
            console.log("Calling Bar::constructor");
        }
    }

    let bar = new Bar;
}

function testSuper() {
    class Foo {
        constructor() {
            this.a = 55;
        }
        get testProp() {
            console.log(`In testProp this=${this}`);
            return this.a;
        }
        static testStatic() {
            console.log("testStatic");
        }
    }

    class Bar extends Foo {
        constructor() {
            super();
        }

        test() {
            console.log(super.testProp);
        }
    }

    class Unrelated {
        constructor() {
            this.something = 42;
        }
        get testProp() {
            return this.something;
        }
    }

    let bar = new Bar();
    bar.test();
    let un = new Unrelated;
    console.log(un.testProp);
}

// testSuper();

function testDoWhile()
{
    let i = 0;
    do {
        if(i == 2)
        {
            ++i;
            continue;
        }
        if(i == 4)
            break;
        console.log(`i=${i}`);
        ++i;
    } while(i < 5);

}

// testDoWhile();

class Foo {
    myFunction() {
        console.log("Doing nothing");
    }

    static myStaticMethod() {

    }
}

runFile("examples/test.mds");
myExport();
console.log("Test");