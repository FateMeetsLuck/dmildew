/*
Closures work similarly to Lua and JavaScript. The functions receive a reference to the outer context in
which they are declared, and this works for classes as well.
*/

function makeCounter(name) {
	let i = 0;
	let count = function() {
		i = i + 1;
		console.log(`${name} ${i}`);
	};
	return count;
}
  
var counter = makeCounter("first");
counter(); // first 1
counter(); // first 2
var counter2 = makeCounter("second");
counter2(); // second 1
let i = 6;
counter(); // first 3
counter2(); // second 2

function makeClass(name) {
    return class {
        constructor() {
            console.log("New anon class " + name);
        }
    };
}

let Cls1 = makeClass("class1");
let Cls2 = makeClass("class2");

new Cls1(); // New anon class class1
new Cls2(); // New anon class class2
new Cls1(); // New anon class class1
// As of Feb 18 15:29 2021 This program produces the correct output