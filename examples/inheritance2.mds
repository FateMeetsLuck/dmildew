/*
The class keyword provides syntactic sugar around the prototypal inheritance system, as well as allowing properties (but not fields)
to be defined.
*/
class Person {
    constructor(name, age) {
        this.name = name;
        this.age = age;
    }
    greet() {
        console.log(`${this.name} says hi`);
    }
}

class Employee extends Person {
    constructor(name, age, workPlace) {
        super(name, age);
        this.workPlace = workPlace;
    }
    work() {
        console.log(`${this.name} (age ${this.age}) works at ${this.workPlace}`);
    }
}

var person = new Person("Tester", 69);
person.greet();

var e1 = new Employee("Vladimir Lenin", 53, "CCCP");
e1.greet();
e1.work();
console.log(e1.eat === undefined);
var e2 = new Employee("Joe Biden", 889, "Imperialist Corporate State");
e2.work();
e2.greet();
e1.work();
// As of 2/7/2021 13:22 This program produces the correct output.
// As of 2/11/2021 16:17 The VM runs this program correctly.
